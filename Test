<?php
const
title = "freeton.in",
versi = "1.0.0",
host = "https://freeton.in/",
refflink = "https://freeton.in/?r=49158",
youtube = "https://www.youtube.com/@hansyaqfarmchannel";


if( PHP_OS_FAMILY == "Linux" ){
	define("n","\n");define("d","\033[0m");define("m","\033[1;31m");define("h","\033[1;32m");define("k","\033[1;33m");define("b","\033[1;34m");define("u","\033[1;35m");define("c","\033[1;36m");define("p","\033[1;37m");define("mp","\033[101m\033[1;37m");define("hp","\033[102m\033[1;30m");define("kp","\033[103m\033[1;37m");define("bp","\033[104m\033[1;37m");define("up","\033[105m\033[1;37m");define("cp","\033[106m\033[1;37m");define("pm","\033[107m\033[1;31m");define("ph","\033[107m\033[1;32m");define("pk","\033[107m\033[1;33m");define("pb","\033[107m\033[1;34m");define("pu","\033[107m\033[1;35m");define("pc","\033[107m\033[1;36m");
}else{
	define("n","\n");define("d","\033[0m");define("m","");define("h","");define("k","");define("b","");define("u","");define("c","");define("p","");define("mp","");define("hp","");define("kp","");define("bp","");define("up","");define("cp","");define("pm","");define("ph","");define("pk","");define("pb","");define("pu","");define("pc","");
}

class Display {
	static function Menu($no, $title){print h."---[".p."$no".h."] ".k."$title\n";}
	static function Error($except){return m."---[".p."!".m."] ".p.$except;}
	static function Sukses($msg){return h."---[".p."✓".h."] ".p.$msg.n;}
	static function Cetak($label, $msg = "[No Content]"){$len = 9;$lenstr = $len-strlen($label);print h."[".p.$label.h.str_repeat(" ",$lenstr)."]─> ".p.$msg.n;}
	static function Isi($msg){return m."╭[".p."Input ".$msg.m."]".n.m."╰> ".h;}
	static function Title($activitas){print bp.str_pad(strtoupper($activitas),44, " ", STR_PAD_BOTH).d.n;}
	{system("clear");
		print n.pm.str_pad(strtoupper("V ".versi),44, " ", STR_PAD_BOTH).d.n;
		print c."──────────────┬".str_repeat("─",29).n;
		print m."<?╔╦╗╔═╗╔═╗".p."╦  ".$line."│".self::authBan("Author", "@fat9ght");
		print m."   ║ ║ ║║ ".p."║║  ".$line."│".self::authBan("Channel", "t.me/MaksaJoin");
		print m."   ╩ ╚═╝╚".p."═╝╩═╝".$line."│".self::authBan("Youtube", "youtube.com/@iewil");
		print m."  ╔═╗╦ ".p."╦╔═╗   ".$line."│".mp.str_pad("!--- 2022 REBORN >", 29, " ", STR_PAD_BOTH).d.n;
		print m."  ╠═╝╠".p."═╣╠═╝   ".$line."│".up.str_pad("@PetapaGenit2, @Zhy_08", 29, " ", STR_PAD_BOTH).d.n;
		print m."  ╩  ".p."╩ ╩╩  ?> ".$line."│".up.str_pad("@IPeop, @MetalFrogs", 29, " ", STR_PAD_BOTH).d.n;
		print c."──────────────┴".str_repeat("─",29).n;
		print hp.str_pad(strtoupper(title),44, " ", STR_PAD_BOTH).d.n;
		print c.str_repeat('─',44).n;
		if(update > null){
			print m."---[".p."^".m."]".h." Update sc Detect\n";
			print m."---[".p."version ".m."] ".p.server['data']['version'].n;
			print m."---[".p."download".m."] ".p.server['data']['link'].n;
			print c.str_repeat('─',44).n;
		}
	}
	static function check($activitas){print k."--[".p."?".k."] ".p."check $activitas";}
	static function detected($activitas){print "\r                                   \r";print h."[".p."√".h."] $activitas detected";sleep(2);print "\r                              \r";}
	static function undetected($activitas){print "\r                              \r";print m."[".p."!".m."] $activitas not detected";sleep(2);print "\r                              \r";}
}
class Functions {
	public $configFile = "config.json";
	public function Clear(){if( PHP_OS_FAMILY == "Linux" ){system('clear');}else{system('cls');}} 
	public function Curl($u, $h = 0, $p = 0,$cookie = 0, $lewat = 0) {while(true){$ch = curl_init();curl_setopt($ch, CURLOPT_URL, $u);curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);curl_setopt($ch, CURLOPT_FOLLOWLOCATION, true);curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, false);curl_setopt($ch, CURLOPT_CONNECTTIMEOUT, 30);curl_setopt($ch, CURLOPT_COOKIE,TRUE);if($cookie) {curl_setopt($ch, CURLOPT_COOKIEFILE,"cookie.txt");curl_setopt($ch, CURLOPT_COOKIEJAR,"cookie.txt");}if($p) {curl_setopt($ch, CURLOPT_POST, true);curl_setopt($ch, CURLOPT_POSTFIELDS, $p);}if($h) {curl_setopt($ch, CURLOPT_HTTPHEADER, $h);}curl_setopt($ch, CURLOPT_HEADER, true);$r = curl_exec($ch);if($lewat){return 0;}$c = curl_getinfo($ch);if(!$c) return "Curl Error : ".curl_error($ch); else{$hd = substr($r, 0, curl_getinfo($ch, CURLINFO_HEADER_SIZE));$bd = substr($r, curl_getinfo($ch, CURLINFO_HEADER_SIZE));curl_close($ch);if(!$bd){print m."Check your Connection!";sleep(2);print "\r                         \r";continue;}return array($hd,$bd);}}}
	public function Auth($w){$lo[] = $w."L".p."oading....";$lo[] = p."L".$w."o".p."ading....";$lo[] = p."Lo".$w."a".p."ding....";$lo[] = p."Loa".$w."d".p."ing....";$lo[] = p."Load".$w."i".p."ng....";$lo[] = p."Loadi".$w."n".p."g....";$lo[] = p."Loadin".$w."g".p."....";$lo[] = p."Loading".$w.".".p."...";$lo[] = p."Loading.".$w.".".p."..";$lo[] = p."Loading..".$w.".".p.".";return $lo;}
	public function Tmr($tmr){date_default_timezone_set("UTC");$col = [b,c,d,h,k,m,u];$sym = [' ─ ',' / ',' │ ',' \ ',];$timr = time()+$tmr+rand(5,10);$a = 0;while(true){$a +=1;$x = $col[array_rand($col)];$nic = $this->Auth($x);$res=$timr-time();if($res < 1) {break;}print "         ".$x.$sym[$a % 4].p.date('H',$res).$x.":".p.date('i',$res).$x.":".p.date('s',$res)." ".$nic[$a % count($nic)]."\r";usleep(100000);}print "\r                                   \r";}
	public function Line(){return c.str_repeat('─',44).n;}
	public function Save($nama_data){if(file_exists($nama_data)){$data = file_get_contents($nama_data);}else{$data = readline(Display::Isi($nama_data));echo "\n";file_put_contents($nama_data,$data);}return $data;}
	public function setConfig($key){if(!file_exists($this->configFile)){$config = [];}else{$config = json_decode(file_get_contents($this->configFile),1);}if(isset($config[$key])){return $config[$key];}else{$data = readline(Display::isi($key));print n;$config[$key] = $data;file_put_contents($this->configFile,json_encode($config,JSON_PRETTY_PRINT));return $data;}}
	public function getConfig($key){if(!file_exists($this->configFile)){$config = [];}else{$config = json_decode(file_get_contents($this->configFile),1);}return $config[$key];}
	public function removeConfig($key){$config = json_decode(file_get_contents($this->configFile),1);unset($config[$key]);file_put_contents($this->configFile,json_encode($config,JSON_PRETTY_PRINT));}
	public function HiddenConfig($key, $data){if(!file_exists($this->configFile)){$config = [];}else{$config = json_decode(file_get_contents($this->configFile),1);}if(!$config[$key]){$config[$key] = $data;file_put_contents($this->configFile,json_encode($config,JSON_PRETTY_PRINT));}return $config[$key];}
	public function view($youtube){$tanggal = date("dmy");if(!file_exists($this->configFile)){$config = [];}else{$config = json_decode(file_get_contents($this->configFile),1);}$view = $this->getConfig('view');if($tanggal == $view){return 0;}else{$config['view'] = $tanggal;system("termux-open-url ".$youtube);file_put_contents($this->configFile,json_encode($config,JSON_PRETTY_PRINT));}}
	public function temporary($newdata,$data=0){if(!$data){$data = [];}return array_merge($data,$newdata);}
	public function Server(){$url = "https://iewilbot.my.id/List/server.php";$param = "title=".title;$r = file_get_contents($url."?".$param);return json_decode($r,1);}
	public function cfDecodeEmail($encodedString){$k = hexdec(substr($encodedString,0,2));for($i=2,$email='';$i<strlen($encodedString)-1;$i+=2){$email.=chr(hexdec(substr($encodedString,$i,2))^$k);}return $email;}
	public function num_rand($int){
		$rand_num = "1234567890";
		$split = str_split($rand_num);
		$res = "";
		while(true){
			$rand = array_rand($split);
			$res .= $split[$rand];
			if( strlen($res) == $int ){ 
				return $res; 
			}
		}
	}
	public function str_rand($int){
		$rand_str = "abcdefghijklmnopqrstuvwqyz";
		$rand_num = "1234567890";
		$rand_str_up= "ABCDEFGHIJKLMNOPQRSTUVWQYZ";
		$split = str_split($rand_str.$rand_num.$rand_str_up);
		$res = "";
		while(true){
			$rand = array_rand($split);
			$res .= $split[$rand];
			if( strlen($res) == $int ){
				return $res;
			}
		}
	}
}
class Bot extends Functions{
	public $cookie,$uagent;
	public function __construct(){
		$this->server = $this->Server();
		if($this->server['data']['version'] == versi){
			define("update", false);
		}else{
			define("server", $this->server);
			define("update", true);
		}
		Display::Ban();
		
		cookie:
		if(empty($this->getConfig('cookie'))){
			Display::Cetak("Register",refflink);
			print $this->Line();
		}
		$this->cookie = $this->setConfig("cookie");
		$this->uagent = $this->setConfig("user_agent");
		$this->csrf = trim(explode(';',explode('csrf_token=',$this->cookie)[1])[0]);
		$this->view(youtube);
		
		Display::Ban();
		
		$r = $this->Dashboard();
		if(!$r['bal']){
			$this->removeConfig("cookie");
			print Display::Error("Cookie Expired\n");
			print $this->line();
			goto cookie;
		}
		
		Display::Cetak("Balance",$r['bal']);
		Display::Cetak("Reward",$r['rp']);
		print $this->line();
		if($this->Claim()){
			$this->removeConfig("cookie");
			goto cookie;
		}
	}
	
	public function headers(){
		$h = [
			"x-csrf-token: ","sec-ch-ua-mobile: ?1",
			"user-agent: ".$this->uagent,
			"x-requested-with: XMLHttpRequest",
			"save-data: on",
			"origin: ".host,
			"sec-fetch-site: same-origin",
			"sec-fetch-mode: cors",
			"sec-fetch-dest: empty",
			"accept-language: en-US,en;q=0.9,id;q=0.8",
			"cookie: ".$this->cookie
		];
		return $h;
	}
	public function finger($csrf){
		$rand = $this->num_rand(6);
		$mdrand = md5($rand);
		$h = ["user-agent: ".$this->uagent];
		$data = http_build_query(["op"=> "record_fingerprint","fingerprint"=> $mdrand,"csrf_token" => $csrf]);
		$r = $this->curl(host."cgi-bin/api.pl?$data",$h)[1];
		if($r){
			return ["finger"=>$mdrand,"fingernum"=>$rand,"sheed"=>$this->str_rand(16)];
		}
	}
	public function Dashboard(){
		$r = $this->curl(host."/?op=home",$this->headers())[1];
		$data['rp'] = trim(explode('</div>',explode('<div class="reward_table_box br_0_0_5_5 user_reward_points font_bold" style="border-top:none;">',$r)[1])[0]);
		$data['bal'] = trim(explode('</span>',explode('<span id="balance_small">',$r)[1])[0]);
		return $data;
	}
	public function Claim(){
		while(true){
			$r = $this->curl(host."/?op=home",$this->headers())[1];
			$timer = explode(');',explode("title_countdown(",$r)[1])[0];
			if($timer){$this->tmr($timer);}
			$finger = $this->finger($this->csrf);
			
			$data = ["csrf_token"=>$this->csrf,"op"=>"free_play","fingerprint"=>$finger["finger"],"client_seed"=>$finger["sheed"],"fingerprint2"=>$finger["fingernum"],"pwc"=>1,"h_recaptcha_response" =>""];
			$r = $this->curl(host, $this->headers(),http_build_query($data))[1];
			$x = explode(':',$r);
			if($x[2]){
				Display::Cetak("Number",$x[1]);
				Display::Cetak("You Win",$x[3]." DOGE");
				Display::Cetak("Balance",$x[2]." DOGE");
				$r = $this->Dashboard();
				Display::Cetak("Reward",$r['rp']);
				print $this->line();
			}else
			if(explode("incorrect",$r)[1]){
				$wr = explode(".",$r)[0];
				print Display::Error($wr);
				sleep(3);
				print "\r                           \r";
			}else{
				exit(m.str_replace(". ","\n",explode(':',$r)[1].n));
			}
		}
	}
}

error_reporting(0);
new Bot();
